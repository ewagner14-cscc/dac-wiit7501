label: Core Container architecture
cli: docker CLI client {
  api: REST API {
    core: Core Daemon
  }
}

scenarios: {
  exts: {
    label: resources available to container daemon
    storage: {
      icon: https://icons.terrastruct.com/infra/011-data-storage.svg
      shape: image
    }
    network: {
      icon: https://icons.terrastruct.com/infra/014-network.svg
      shape: image
    }
    container: {
      icon: https://icons.terrastruct.com/aws/Compute/Amazon-Elastic-Container-Service_Container1_light-bg.svg
      shape: image
    }
    images: {
      icon: https://icons.terrastruct.com/azure/Other%20Category%20Service%20Icon/Image%20Versions.svg
      shape: image
    }
    * -> cli: manages
  }
  user: {
    label: interacting with containers
    user: DevOps {
      icon: https://icons.terrastruct.com/essentials/005-programmer.svg
      shape: image
    }
    cli.laptop: {
      icon: https://icons.terrastruct.com/tech/laptop.svg
      shape: image
    }
    cli.api.core: {
      cluster: {
        icon: https://icons.terrastruct.com/azure/Databases%20Service%20Color/Virtual%20Clusters.svg
        shape: image
      }
      server: {
        icon: https://icons.terrastruct.com/tech/022-server.svg
        shape: image
      }
    }
    cli.api.rest: RESTful api {
      icon: https://icons.terrastruct.com/azure/Web%20Service%20Color/API%20Connections.svg
      shape: image
    }
    cli.vdi: {
      icon: https://icons.terrastruct.com/azure/Intune%20Service%20Color/Managed%20Desktop.svg
      shape: image
    }
    user -> cli.vdi
    user -> cli.laptop
    cli.vdi -> cli.api.rest
    cli.laptop -> cli.api.rest
    cli.api.rest -> cli.api.core.*
  }
}
